[
    {
        "id": "c7015bd55ac9c57d",
        "type": "tab",
        "label": "Communication",
        "disabled": false,
        "info": "Various communication with devices",
        "env": []
    },
    {
        "id": "d974087eb4410441",
        "type": "tab",
        "label": "DB",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9c23ead5f4cd17b6",
        "type": "tab",
        "label": "Dashboard",
        "disabled": false,
        "info": "For displaying various info",
        "env": []
    },
    {
        "id": "1292ba0fe2f33fc4",
        "type": "subflow",
        "name": "Subflow 1",
        "info": "",
        "category": "",
        "in": [],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "dff9176621056133",
        "type": "group",
        "z": "c7015bd55ac9c57d",
        "name": "Control Cat",
        "style": {
            "label": true
        },
        "nodes": [
            "bb8e501cbe7d5d9d",
            "e4f62c1015b6a187",
            "e5c5cf0d6bb917c5",
            "b7af9e519ca5b9d7",
            "308f248214133e70",
            "8955a8be5e602442"
        ],
        "x": 74,
        "y": 59,
        "w": 612,
        "h": 242
    },
    {
        "id": "0591b57e8f20d00d",
        "type": "group",
        "z": "9c23ead5f4cd17b6",
        "name": "Styling",
        "style": {
            "label": true,
            "stroke": "#a4a4a4"
        },
        "nodes": [
            "dc1d7aadb5cf6f36",
            "b23d2583cd712fdc"
        ],
        "x": 54,
        "y": 19,
        "w": 412,
        "h": 82
    },
    {
        "id": "c9965334e0b36a0b",
        "type": "group",
        "z": "d974087eb4410441",
        "name": "Car",
        "style": {
            "label": true
        },
        "nodes": [
            "1236e3bf163b4142",
            "eb6d2cad886648e8",
            "e893b7685905402d",
            "6f161c9edf33ba3d",
            "fbb060fd70043410",
            "8f11c965debd450e"
        ],
        "x": 34,
        "y": 539,
        "w": 312,
        "h": 202
    },
    {
        "id": "30665a9e1110e356",
        "type": "group",
        "z": "c7015bd55ac9c57d",
        "name": "Test",
        "style": {
            "label": true
        },
        "nodes": [
            "0dd2fd9545bda4ca",
            "0817f2202b3f46a9",
            "4485a75d1a0f656c",
            "f7f0e15a2aa36350",
            "7caeb28ac2a0cba9",
            "32d91f45c0238651",
            "d56752421e229ef8",
            "1d9c3b808be68e07",
            "d64de82239fb1bbd",
            "9089e3c94b2ce382",
            "0c4411c448ac4caa",
            "899bd7a9f2ce31ab"
        ],
        "x": 54,
        "y": 579,
        "w": 642,
        "h": 482
    },
    {
        "id": "113b862a748abc98",
        "type": "group",
        "z": "c7015bd55ac9c57d",
        "name": "Car",
        "style": {
            "label": true
        },
        "nodes": [
            "f118c9cde3adfa79",
            "6abf56e4a87d6a49",
            "a2d3c7c1ccc6f567",
            "038b288f4ba869de",
            "2f4b2f43ca14af61",
            "b27aeb6f7cd37378"
        ],
        "x": 54,
        "y": 1099,
        "w": 292,
        "h": 202
    },
    {
        "id": "9e784f1479b1ecc4",
        "type": "group",
        "z": "c7015bd55ac9c57d",
        "name": "toll_station",
        "style": {
            "label": true
        },
        "nodes": [
            "21275fd3a4c7913e",
            "5454094dd1d0958e"
        ],
        "x": 48,
        "y": 1353,
        "w": 1164,
        "h": 434
    },
    {
        "id": "8ceaad14f6929143",
        "type": "group",
        "z": "d974087eb4410441",
        "name": "db tollstation",
        "style": {
            "label": true
        },
        "nodes": [
            "fa423b6c44026824",
            "7c5378ce3d8e1fab",
            "1060263491f37862"
        ],
        "x": 38,
        "y": 813,
        "w": 1144,
        "h": 574
    },
    {
        "id": "fa423b6c44026824",
        "type": "group",
        "z": "d974087eb4410441",
        "g": "8ceaad14f6929143",
        "name": "insert_powerprice",
        "style": {
            "label": true
        },
        "nodes": [
            "b3c8efd25d693eb7",
            "2fa7fa16.df7d36",
            "8c41d7d6d675747c",
            "6deff2c3917ab08e",
            "20fc10f82e1fbb3c",
            "f5f52c154dc1c527",
            "465b90c9e7577fdd",
            "b8b5793024a68019",
            "bd2be327c3068176",
            "6c75f5e6b0bae9ef"
        ],
        "x": 74,
        "y": 839,
        "w": 1082,
        "h": 162
    },
    {
        "id": "21275fd3a4c7913e",
        "type": "group",
        "z": "c7015bd55ac9c57d",
        "g": "9e784f1479b1ecc4",
        "name": "return to toll station",
        "style": {
            "label": true
        },
        "nodes": [
            "56faac02af1e3921",
            "892664ccd686b134",
            "a8858f8a4c84de28",
            "3eb8a7513cd893f0",
            "6d866f700464c477"
        ],
        "x": 74,
        "y": 1619,
        "w": 592,
        "h": 142
    },
    {
        "id": "5454094dd1d0958e",
        "type": "group",
        "z": "c7015bd55ac9c57d",
        "g": "9e784f1479b1ecc4",
        "name": "get_power_prices",
        "style": {
            "label": true
        },
        "nodes": [
            "b4fe374a9bd7e327",
            "1924828f1dadb641",
            "0c28e72814e9bbae",
            "270c46f9ca7fe345",
            "75db24836ef699f2",
            "7047c6b94e2edca3",
            "11e643123ec5b919",
            "5447f1d107d07b4d",
            "216a5b5f33c20201",
            "6583d5f44e957ce0",
            "93a705171c063e17"
        ],
        "x": 74,
        "y": 1379,
        "w": 1112,
        "h": 182
    },
    {
        "id": "7c5378ce3d8e1fab",
        "type": "group",
        "z": "d974087eb4410441",
        "g": "8ceaad14f6929143",
        "name": "get_userscore_and_price",
        "style": {
            "label": true
        },
        "nodes": [
            "f1c8edc3f112fcf2",
            "06dc7761e9b36e06",
            "8a79294f8c9e1bda",
            "2492751851d4ab57",
            "6578372151a0df87",
            "bd683dfaf575d92b",
            "8ff91e6586ddbeb6",
            "70ea88b87505faaa",
            "2311204e8aeb792a"
        ],
        "x": 64,
        "y": 1039,
        "w": 1082,
        "h": 142
    },
    {
        "id": "1343424fbbdc4b4e",
        "type": "group",
        "z": "9c23ead5f4cd17b6",
        "name": "users_overview_page",
        "style": {
            "label": true
        },
        "nodes": [
            "ea5ff2cd0cdfe128",
            "723dda3faa263f6c",
            "070400a13d344993",
            "856de6d3ce3eff89",
            "f088635e3f42d421",
            "33998569dd15990e"
        ],
        "x": 54,
        "y": 799,
        "w": 632,
        "h": 162
    },
    {
        "id": "116ddb3989f7865c",
        "type": "group",
        "z": "9c23ead5f4cd17b6",
        "g": "0829e4ce132f4920",
        "name": "set_toll_prices",
        "style": {
            "label": true
        },
        "nodes": [
            "728bcfee316180c5",
            "9695c47a09c4d657",
            "fd21801d95c179a1",
            "6a8d7251a99d269b",
            "49ab5c9eef18e2fe",
            "d3bb702bcdf691a1",
            "2636e9073bae688d",
            "d5bb29401cd9c2f9",
            "d2c115aaae325b40",
            "ddefcb191dc9d43a"
        ],
        "x": 74,
        "y": 539,
        "w": 1072,
        "h": 202
    },
    {
        "id": "1060263491f37862",
        "type": "group",
        "z": "d974087eb4410441",
        "g": "8ceaad14f6929143",
        "name": "get_most_recent_toll_prices",
        "style": {
            "label": true
        },
        "nodes": [
            "f6d3906734b58c4b",
            "2d95327a837381a2",
            "e8c5ccf60952c2be",
            "0f60eb9b92962992",
            "a501c4b70711fc78",
            "e1c49e9771213b10",
            "f82bd2713bd5bea4"
        ],
        "x": 74,
        "y": 1219,
        "w": 1012,
        "h": 142
    },
    {
        "id": "8d23dc769da0d07f",
        "type": "group",
        "z": "d974087eb4410441",
        "name": "users_handler",
        "style": {
            "label": true
        },
        "nodes": [
            "77ef07ddbc346c22",
            "22308172980d6de6",
            "a5837349ffd6fca1",
            "2bd950a05a93757a"
        ],
        "x": 34,
        "y": 379,
        "w": 482,
        "h": 82
    },
    {
        "id": "69f933624170a8db",
        "type": "group",
        "z": "9c23ead5f4cd17b6",
        "g": "0829e4ce132f4920",
        "name": "refresh_toll_prices_page",
        "style": {
            "label": true
        },
        "nodes": [
            "04613cd67e7bd8bd",
            "d9f5b4ebe6ceadec",
            "6f2b6412d3243be9",
            "32bba6d6bdb66cee",
            "7d834a69f9cfe8eb",
            "da204c00005594c9",
            "38573d34b841eb61",
            "9ae509c0229a4605",
            "9dca2e760e12e3df",
            "ef9316e3662e77af",
            "b3df72d8dcb2bc3a",
            "2d68d6a1aa9ef244",
            "2848dc9c2586b927",
            "438180f8e7ed266d"
        ],
        "x": 74,
        "y": 219,
        "w": 912,
        "h": 282
    },
    {
        "id": "0829e4ce132f4920",
        "type": "group",
        "z": "9c23ead5f4cd17b6",
        "name": "toll_prices_edit",
        "style": {
            "label": true
        },
        "nodes": [
            "116ddb3989f7865c",
            "69f933624170a8db"
        ],
        "x": 48,
        "y": 193,
        "w": 1124,
        "h": 574
    },
    {
        "id": "f2952bbb2ad433e2",
        "type": "MySQLdatabase",
        "name": "TestDB",
        "host": "${DB_HOST}",
        "port": "${DB_PORT}",
        "db": "testdb",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "dc20097875203fb9",
        "type": "mqtt-broker",
        "name": "docker-mqtt",
        "broker": "mqtt",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "ed3a4854fa1b4db8",
        "type": "ui-base",
        "name": "Dashboard",
        "path": "/dashboard",
        "includeClientData": true,
        "acceptsClientConfig": [
            "ui-notification",
            "ui-control"
        ],
        "showPathInSidebar": false,
        "navigationStyle": "default"
    },
    {
        "id": "91be7011842be941",
        "type": "ui-theme",
        "name": "Default Theme",
        "colors": {
            "surface": "#ffffff",
            "primary": "#5c8192",
            "bgPage": "#eeeeee",
            "groupBg": "#ffffff",
            "groupOutline": "#cccccc"
        },
        "sizes": {
            "pagePadding": "12px",
            "groupGap": "12px",
            "groupBorderRadius": "4px",
            "widgetGap": "12px"
        }
    },
    {
        "id": "a20dc435c727eb9b",
        "type": "ui-page",
        "name": "Home",
        "ui": "ed3a4854fa1b4db8",
        "path": "/home",
        "icon": "home",
        "layout": "notebook",
        "theme": "91be7011842be941",
        "order": 1,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "78b509623ddc3923",
        "type": "ui-group",
        "name": "Control",
        "page": "a20dc435c727eb9b",
        "width": "6",
        "height": "1",
        "order": -1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "4880197e99519344",
        "type": "ui-page",
        "name": "Contact",
        "ui": "ed3a4854fa1b4db8",
        "path": "/contact",
        "icon": "information",
        "layout": "notebook",
        "theme": "91be7011842be941",
        "order": 4,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "d68e6862685d10df",
        "type": "ui-group",
        "name": "Ratings",
        "page": "4880197e99519344",
        "width": "6",
        "height": "1",
        "order": -1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "a29bbf123578a015",
        "type": "ui-page",
        "name": "Users",
        "ui": "ed3a4854fa1b4db8",
        "path": "/users",
        "icon": "table-account",
        "layout": "notebook",
        "theme": "91be7011842be941",
        "order": 3,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "8e8e755dd05b63ae",
        "type": "ui-page",
        "name": "Overview",
        "ui": "ed3a4854fa1b4db8",
        "path": "/overview",
        "icon": "view-dashboard",
        "layout": "notebook",
        "theme": "91be7011842be941",
        "order": 2,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "e6a3eaaef97c58a0",
        "type": "ui-group",
        "name": "All users",
        "page": "a29bbf123578a015",
        "width": "6",
        "height": "1",
        "order": -1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "f4b408f314ea8fb3",
        "type": "ui-group",
        "name": "Toll Prices",
        "page": "8e8e755dd05b63ae",
        "width": "6",
        "height": "1",
        "order": -1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "2236dfd1.c909e",
        "type": "MySQLdatabase",
        "name": "",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "test",
        "tz": "",
        "charset": ""
    },
    {
        "id": "bb8e501cbe7d5d9d",
        "type": "function",
        "z": "c7015bd55ac9c57d",
        "g": "dff9176621056133",
        "name": "Keypress",
        "func": "msg.payload = \"hallo\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 160,
        "wires": [
            [
                "e4f62c1015b6a187",
                "e5c5cf0d6bb917c5",
                "8955a8be5e602442"
            ]
        ]
    },
    {
        "id": "e4f62c1015b6a187",
        "type": "debug",
        "z": "c7015bd55ac9c57d",
        "g": "dff9176621056133",
        "name": "debug 15",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 240,
        "wires": []
    },
    {
        "id": "e5c5cf0d6bb917c5",
        "type": "mqtt out",
        "z": "c7015bd55ac9c57d",
        "g": "dff9176621056133",
        "name": "control",
        "topic": "car/control",
        "qos": "0",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "dc20097875203fb9",
        "x": 570,
        "y": 160,
        "wires": []
    },
    {
        "id": "5631cd8e37f10e5f",
        "type": "inject",
        "z": "c7015bd55ac9c57d",
        "name": "insert_user",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "insert",
        "payload": "{\"d_score\":194}",
        "payloadType": "json",
        "x": 180,
        "y": 440,
        "wires": [
            [
                "6eb947dff35c7a58"
            ]
        ]
    },
    {
        "id": "6eb947dff35c7a58",
        "type": "json",
        "z": "c7015bd55ac9c57d",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": true,
        "x": 410,
        "y": 440,
        "wires": [
            [
                "414f9ce98347a63b"
            ]
        ]
    },
    {
        "id": "414f9ce98347a63b",
        "type": "link out",
        "z": "c7015bd55ac9c57d",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "34ea1d322de1ddc2"
        ],
        "x": 615,
        "y": 440,
        "wires": []
    },
    {
        "id": "b7af9e519ca5b9d7",
        "type": "comment",
        "z": "c7015bd55ac9c57d",
        "g": "dff9176621056133",
        "name": "",
        "info": "<script>\n\n    \n    (function($scope) {\n    \n \n    console.log('Hello');\n\n    let keys = {};\n\n    document.addEventListener('keydown', (event) => {\n    if (event.repeat) return;\n    \n    if (event.key != \"CapsLock\") {\n        keys[event.key] = true;\n        let msg = {\"payload\": keys, \"topic\": \"keydown\"};\n        $scope.send(msg);\n    }\n    });\n\n    document.addEventListener('keyup', (event) => {\n    var keyName = event.key;\n    var keyCode = event.code;\n    delete keys[event.key];\n    let msg = {\"payload\": keys, \"topic\": \"keyup\"};\n    $scope.send(msg);\n\n    },{capture: true});\n    })(scope);\n</script>",
        "x": 160,
        "y": 260,
        "wires": []
    },
    {
        "id": "308f248214133e70",
        "type": "ui-template",
        "z": "c7015bd55ac9c57d",
        "g": "dff9176621056133",
        "group": "78b509623ddc3923",
        "page": "",
        "ui": "",
        "name": "get_events",
        "order": 0,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n    <div>\n        <h2>Pageload: {{ loaded }}</h2>\n        <p>Current Count: {{ key }}</p>\n        <p class=\"my-class\">Formatted Count: {{ formattedCount }}</p>\n        <!-- <v-btn @click=\"increase()\">Increment</v-btn> -->\n        <!-- <input @keyup.enter=\"increase\" /> -->\n    </div>\n</template>\n\n<script>\n    export default {\n        data() {\n            // define variables available component-wide\n            // (in <template> and component functions)\n            return {\n                loaded: false,\n                count: 0,\n                key: \"\"\n            }\n        },\n        watch: {\n            // watch for any changes of \"count\"\n            count: function () {\n                if (this.count % 5 === 0) {\n                    this.send({payload: 'Multiple of 5'})\n                }\n            }\n        },\n        computed: {\n            // automatically compute this variable\n            // whenever VueJS deems appropriate\n            formattedCount: function () {\n                return `${this.count}`\n            }\n        },\n        methods: {\n            // expose a method to our <template> and Vue Application\n            increase: function (key) {\n                this.key = key\n            },\n\n            onKeydown( event ) {\n                if (event.key === \"Escape\") {       \n                    console.log('hello esc ')\n                    this.increase(event.key)\n                }\n                if (event.key === \"w\") {\n                    console.log(\"w\")\n                    this.count++\n                    \n                }\n                this.increase(event.key)\n            }\n        },\n        mounted() {\n            // code here when the component is first loaded\n            document.addEventListener( \"keydown\", this.onKeydown );\n            this.loaded = true\n        },\n        unmounted() {\n            // code here when the component is removed from the Dashboard\n            // i.e. when the user navigates away from the page\n        }\n    }\n</script>\n<style>\n    /* define any styles here - supports raw CSS */\n    .my-class {\n            width:200px;\n            height:20px;\n            background-color: blue;\n            top: 10%;\n            left: 50%;\n            margin-top: 100px;\n            margin-left: 100px;\n    }\n</style>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 170,
        "y": 160,
        "wires": [
            [
                "bb8e501cbe7d5d9d"
            ]
        ]
    },
    {
        "id": "8955a8be5e602442",
        "type": "ui-text",
        "z": "c7015bd55ac9c57d",
        "g": "dff9176621056133",
        "group": "78b509623ddc3923",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "show_input",
        "label": "what this",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "className": "{{msg.payload}}",
        "x": 590,
        "y": 100,
        "wires": []
    },
    {
        "id": "f118c9cde3adfa79",
        "type": "mqtt in",
        "z": "c7015bd55ac9c57d",
        "g": "113b862a748abc98",
        "name": "",
        "topic": "car/distance",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "dc20097875203fb9",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 1140,
        "wires": [
            [
                "038b288f4ba869de"
            ]
        ]
    },
    {
        "id": "6abf56e4a87d6a49",
        "type": "mqtt in",
        "z": "c7015bd55ac9c57d",
        "g": "113b862a748abc98",
        "name": "",
        "topic": "car/speed",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "dc20097875203fb9",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 1200,
        "wires": [
            [
                "2f4b2f43ca14af61"
            ]
        ]
    },
    {
        "id": "a2d3c7c1ccc6f567",
        "type": "mqtt in",
        "z": "c7015bd55ac9c57d",
        "g": "113b862a748abc98",
        "name": "",
        "topic": "car/score",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "dc20097875203fb9",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 1260,
        "wires": [
            [
                "b27aeb6f7cd37378"
            ]
        ]
    },
    {
        "id": "038b288f4ba869de",
        "type": "link out",
        "z": "c7015bd55ac9c57d",
        "g": "113b862a748abc98",
        "name": "distance",
        "mode": "link",
        "links": [
            "1236e3bf163b4142"
        ],
        "x": 305,
        "y": 1140,
        "wires": []
    },
    {
        "id": "2f4b2f43ca14af61",
        "type": "link out",
        "z": "c7015bd55ac9c57d",
        "g": "113b862a748abc98",
        "name": "speed",
        "mode": "link",
        "links": [
            "eb6d2cad886648e8"
        ],
        "x": 305,
        "y": 1200,
        "wires": []
    },
    {
        "id": "b27aeb6f7cd37378",
        "type": "link out",
        "z": "c7015bd55ac9c57d",
        "g": "113b862a748abc98",
        "name": "score",
        "mode": "link",
        "links": [
            "e893b7685905402d"
        ],
        "x": 305,
        "y": 1260,
        "wires": []
    },
    {
        "id": "0dd2fd9545bda4ca",
        "type": "ui-template",
        "z": "c7015bd55ac9c57d",
        "d": true,
        "g": "30665a9e1110e356",
        "group": "d68e6862685d10df",
        "page": "",
        "ui": "",
        "name": "",
        "order": 2,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <div>\n    <v-progress-linear\n      color=\"yellow-darken-2\"\n      indeterminate\n    ></v-progress-linear>\n    <br>\n    <v-progress-linear\n      color=\"green\"\n      indeterminate\n    ></v-progress-linear>\n    <br>\n    <v-progress-linear\n      color=\"teal\"\n      indeterminate\n    ></v-progress-linear>\n    <br>\n    <v-progress-linear\n      color=\"cyan\"\n      indeterminate\n    ></v-progress-linear>\n  </div>\n</template>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 240,
        "y": 620,
        "wires": [
            [
                "0817f2202b3f46a9"
            ]
        ]
    },
    {
        "id": "0817f2202b3f46a9",
        "type": "debug",
        "z": "c7015bd55ac9c57d",
        "d": true,
        "g": "30665a9e1110e356",
        "name": "debug 19",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 620,
        "wires": []
    },
    {
        "id": "4485a75d1a0f656c",
        "type": "ui-template",
        "z": "c7015bd55ac9c57d",
        "d": true,
        "g": "30665a9e1110e356",
        "group": "78b509623ddc3923",
        "page": "",
        "ui": "",
        "name": "displaymsg",
        "order": 0,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n    <div>\n        <h2>Latest <code>msg</code> received:</h2>\n        <pre>{{ msg }}</pre>\n    </div>\n</template>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 390,
        "y": 720,
        "wires": [
            [
                "f7f0e15a2aa36350"
            ]
        ]
    },
    {
        "id": "f7f0e15a2aa36350",
        "type": "debug",
        "z": "c7015bd55ac9c57d",
        "d": true,
        "g": "30665a9e1110e356",
        "name": "debug 21",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 740,
        "wires": []
    },
    {
        "id": "7caeb28ac2a0cba9",
        "type": "inject",
        "z": "c7015bd55ac9c57d",
        "d": true,
        "g": "30665a9e1110e356",
        "name": "insert_user",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "insert",
        "payload": "{\"d_score\":194}",
        "payloadType": "json",
        "x": 160,
        "y": 780,
        "wires": [
            [
                "4485a75d1a0f656c"
            ]
        ]
    },
    {
        "id": "32d91f45c0238651",
        "type": "ui-template",
        "z": "c7015bd55ac9c57d",
        "d": true,
        "g": "30665a9e1110e356",
        "group": "78b509623ddc3923",
        "page": "",
        "ui": "",
        "name": "custom_event",
        "order": 0,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n\n<v-btn @click=\"$socket.emit('ui-event', 'ed2de3066e8f442a', msg)\">Send Custom Event</v-btn>\n\n</template>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 380,
        "y": 900,
        "wires": [
            [
                "d56752421e229ef8"
            ]
        ]
    },
    {
        "id": "d56752421e229ef8",
        "type": "debug",
        "z": "c7015bd55ac9c57d",
        "d": true,
        "g": "30665a9e1110e356",
        "name": "debug 22",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 840,
        "wires": []
    },
    {
        "id": "1d9c3b808be68e07",
        "type": "ui-template",
        "z": "c7015bd55ac9c57d",
        "d": true,
        "g": "30665a9e1110e356",
        "group": "78b509623ddc3923",
        "page": "",
        "ui": "",
        "name": "socket_listen",
        "order": 0,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n    <!-- Any HTML can go here -->\n    <button class=\"my-class2\" onclick=\"onClick()\">My Button</button>\n</template>\n\n<script>\n    /* Write any JavaScript here */\n    // add our onClick function to the window object to make it accessible by the HTML <button>\n    window.onClick = function () {\n        alert('Button has been clicked')\n    }\n\n    // Use send() function to pass on data back into Node-RED:\n    this.send('Component has loaded')\n\n    // Subscribe to the incoming msg's\n    this.$socket.on('msg-input:' + this.id, function(msg) {\n        // do stuff with the message\n        alert('message received: ' + msg.payload + 'from' + this.id)\n    })\n</script>\n\n<style>\n    /* define any styles here - supports raw CSS */\n    .my-class2 {\n        color: green;\n    }\n</style>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 370,
        "y": 1020,
        "wires": [
            [
                "d64de82239fb1bbd"
            ]
        ]
    },
    {
        "id": "d64de82239fb1bbd",
        "type": "debug",
        "z": "c7015bd55ac9c57d",
        "d": true,
        "g": "30665a9e1110e356",
        "name": "debug 23",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 960,
        "wires": []
    },
    {
        "id": "9089e3c94b2ce382",
        "type": "ui-template",
        "z": "c7015bd55ac9c57d",
        "d": true,
        "g": "30665a9e1110e356",
        "group": "",
        "page": "4880197e99519344",
        "ui": "",
        "name": "",
        "order": 0,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n    <div>\n        <p>Query Parameter: {{ $route.query }}</p>\n    </div>\n</template>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "widget:page",
        "className": "",
        "x": 340,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "0c4411c448ac4caa",
        "type": "inject",
        "z": "c7015bd55ac9c57d",
        "d": true,
        "g": "30665a9e1110e356",
        "name": "insert_user",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "insert",
        "payload": "{\"d_score\":194}",
        "payloadType": "json",
        "x": 180,
        "y": 960,
        "wires": [
            [
                "1d9c3b808be68e07"
            ]
        ]
    },
    {
        "id": "899bd7a9f2ce31ab",
        "type": "function",
        "z": "c7015bd55ac9c57d",
        "d": true,
        "g": "30665a9e1110e356",
        "name": "function 3",
        "func": "msg.payload = 'hi'\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 140,
        "y": 860,
        "wires": [
            [
                "32d91f45c0238651"
            ]
        ]
    },
    {
        "id": "b4fe374a9bd7e327",
        "type": "http request",
        "z": "c7015bd55ac9c57d",
        "g": "5454094dd1d0958e",
        "name": "get_power_prices",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://www.hvakosterstrommen.no/api/v1/prices/{{{topic}}}.json ",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 590,
        "y": 1420,
        "wires": [
            [
                "270c46f9ca7fe345"
            ]
        ]
    },
    {
        "id": "1924828f1dadb641",
        "type": "inject",
        "z": "c7015bd55ac9c57d",
        "g": "5454094dd1d0958e",
        "name": "emulate_toll_station",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Toll ID: 1, Car ID: 1, driver ID: 1",
        "payloadType": "str",
        "x": 210,
        "y": 1420,
        "wires": [
            [
                "0c28e72814e9bbae"
            ]
        ]
    },
    {
        "id": "0c28e72814e9bbae",
        "type": "function",
        "z": "c7015bd55ac9c57d",
        "g": "5454094dd1d0958e",
        "name": "get_now",
        "func": "//let date2 = new Date(Date.UTC(2012, 3, 0, 3, 0, 0)).toLocaleDateString(\"no-NO\", {day: \"2-digit\"}).slice(0,2)\nlet date = new Date();\n\nlet received_string = msg.payload;\n\n//\"Toll ID: 1, Car ID: 3, driver ID: 3\"\n\nconst res = /Toll ID: ([0-9]+), Car ID: ([0-9]+), driver ID: ([0-9]+)/;\n\n\nlet regex_find = received_string.match(res);\n\nflow.set(\"toll_id\", parseInt(regex_find[1], 10));\nflow.set(\"car_id\", parseInt(regex_find[2], 10));\nflow.set(\"user_id\",parseInt(regex_find[3], 10));\n\n//let day = date.getDay().toLocaleString(\"no_NO\", options);\nlet day = date.toLocaleDateString(\"no-NO\", {day: \"2-digit\"}).slice(0,2);\nlet month = date.toLocaleDateString(\"no-NO\", {month: \"2-digit\"}).slice(0,2);\nlet year = date.getFullYear();\n\nmsg.topic = `${year}/${month}-${day}_NO5`;\n\n//msg.payload = day\n//msg.topic = \"/2024/05-30_NO5\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1420,
        "wires": [
            [
                "b4fe374a9bd7e327",
                "93a705171c063e17"
            ]
        ]
    },
    {
        "id": "270c46f9ca7fe345",
        "type": "json",
        "z": "c7015bd55ac9c57d",
        "g": "5454094dd1d0958e",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 750,
        "y": 1420,
        "wires": [
            [
                "75db24836ef699f2"
            ]
        ]
    },
    {
        "id": "75db24836ef699f2",
        "type": "function",
        "z": "c7015bd55ac9c57d",
        "g": "5454094dd1d0958e",
        "name": "get_current_price",
        "func": "let hour = new Date().getHours();\n\nlet prices = msg.payload;\n\nlet toll_info = {\n    price: prices[hour]['NOK_per_kWh'],\n    car_id: flow.get(\"car_id\"),\n    toll_id: flow.get(\"toll_id\")\n}\nmsg.topic = \"\"\nmsg.payload = toll_info;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 1420,
        "wires": [
            [
                "7047c6b94e2edca3",
                "11e643123ec5b919"
            ]
        ]
    },
    {
        "id": "7047c6b94e2edca3",
        "type": "debug",
        "z": "c7015bd55ac9c57d",
        "g": "5454094dd1d0958e",
        "name": "debug 30",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 1520,
        "wires": []
    },
    {
        "id": "5447f1d107d07b4d",
        "type": "mqtt in",
        "z": "c7015bd55ac9c57d",
        "g": "5454094dd1d0958e",
        "name": "",
        "topic": "Toll-station",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "dc20097875203fb9",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 1520,
        "wires": [
            [
                "216a5b5f33c20201",
                "0c28e72814e9bbae"
            ]
        ]
    },
    {
        "id": "216a5b5f33c20201",
        "type": "debug",
        "z": "c7015bd55ac9c57d",
        "g": "5454094dd1d0958e",
        "name": "debug 31",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 1520,
        "wires": []
    },
    {
        "id": "56faac02af1e3921",
        "type": "link in",
        "z": "c7015bd55ac9c57d",
        "g": "21275fd3a4c7913e",
        "name": "comms.input.return_to_toll",
        "links": [
            "8a79294f8c9e1bda"
        ],
        "x": 115,
        "y": 1660,
        "wires": [
            [
                "892664ccd686b134"
            ]
        ]
    },
    {
        "id": "892664ccd686b134",
        "type": "function",
        "z": "c7015bd55ac9c57d",
        "g": "21275fd3a4c7913e",
        "name": "decide_price",
        "func": "if (msg.payload !== null) {\n    let vehicle_class = msg.payload[0];\n    let dsc = msg.payload[1];\n    let nok_kWh = msg.payload[2];\n    \n    // reward electric drivers on days with low electric prices\n    if (vehicle_class == \"Electric\") {\n        msg.payload = global.get(\"toll_electric\") * Math.E ** (100 * nok_kWh / dsc);\n    } else if (vehicle_class = \"Gasoline\") {\n        msg.payload = global.get(\"toll_gasoline\") * Math.E ** (100 * nok_kWh / dsc);\n    } else if (vehicle_class = \"Service\") {\n        msg.payload = global.get(\"toll_service\") * Math.E ** (100 * nok_kWh / dsc);\n    }\n} else {\n    msg.payload = \"No such user/vehicle registered\";\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 1660,
        "wires": [
            [
                "a8858f8a4c84de28",
                "3eb8a7513cd893f0"
            ]
        ]
    },
    {
        "id": "3eb8a7513cd893f0",
        "type": "mqtt out",
        "z": "c7015bd55ac9c57d",
        "g": "21275fd3a4c7913e",
        "name": "",
        "topic": "carPrice",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "dc20097875203fb9",
        "x": 560,
        "y": 1720,
        "wires": []
    },
    {
        "id": "6d866f700464c477",
        "type": "inject",
        "z": "c7015bd55ac9c57d",
        "g": "21275fd3a4c7913e",
        "name": "resend_test",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "73",
        "payloadType": "num",
        "x": 190,
        "y": 1720,
        "wires": [
            [
                "3eb8a7513cd893f0"
            ]
        ]
    },
    {
        "id": "a8858f8a4c84de28",
        "type": "debug",
        "z": "c7015bd55ac9c57d",
        "g": "21275fd3a4c7913e",
        "name": "debug 35",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 1660,
        "wires": []
    },
    {
        "id": "11e643123ec5b919",
        "type": "link out",
        "z": "c7015bd55ac9c57d",
        "g": "5454094dd1d0958e",
        "name": "get-price.output",
        "mode": "link",
        "links": [
            "b3c8efd25d693eb7",
            "0f60eb9b92962992"
        ],
        "x": 1075,
        "y": 1420,
        "wires": []
    },
    {
        "id": "6583d5f44e957ce0",
        "type": "link out",
        "z": "c7015bd55ac9c57d",
        "g": "5454094dd1d0958e",
        "name": "send_u_id_and_v_id",
        "mode": "link",
        "links": [
            "70ea88b87505faaa"
        ],
        "x": 755,
        "y": 1520,
        "wires": []
    },
    {
        "id": "93a705171c063e17",
        "type": "function",
        "z": "c7015bd55ac9c57d",
        "g": "5454094dd1d0958e",
        "name": "send_ids",
        "func": "msg.payload = {\n    u_id: flow.get(\"user_id\"),\n    t_id: flow.get(\"toll_id\"),\n    v_id: flow.get(\"car_id\") \n};\n\nmsg.topic = \"id\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1520,
        "wires": [
            [
                "6583d5f44e957ce0"
            ]
        ]
    },
    {
        "id": "f02207af4cfba9b8",
        "type": "inject",
        "z": "d974087eb4410441",
        "name": "mqtt-send",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "hello from nodered",
        "payloadType": "str",
        "x": 160,
        "y": 100,
        "wires": [
            [
                "396957e4591a092c",
                "b856821e585a2640"
            ]
        ]
    },
    {
        "id": "396957e4591a092c",
        "type": "debug",
        "z": "d974087eb4410441",
        "name": "debug 14",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 80,
        "wires": []
    },
    {
        "id": "b856821e585a2640",
        "type": "mqtt out",
        "z": "d974087eb4410441",
        "name": "",
        "topic": "info/test",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "dc20097875203fb9",
        "x": 360,
        "y": 140,
        "wires": []
    },
    {
        "id": "34ea1d322de1ddc2",
        "type": "link in",
        "z": "d974087eb4410441",
        "name": "link in 2",
        "links": [
            "414f9ce98347a63b"
        ],
        "x": 55,
        "y": 280,
        "wires": [
            [
                "0b3e6df4fe188922"
            ]
        ]
    },
    {
        "id": "cb643570aee91a84",
        "type": "debug",
        "z": "d974087eb4410441",
        "name": "debug 16",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 280,
        "wires": []
    },
    {
        "id": "cbc77b34d7b89224",
        "type": "mysql",
        "z": "d974087eb4410441",
        "mydb": "f2952bbb2ad433e2",
        "name": "mdb-test",
        "x": 420,
        "y": 280,
        "wires": [
            [
                "cb643570aee91a84"
            ]
        ]
    },
    {
        "id": "0b3e6df4fe188922",
        "type": "function",
        "z": "d974087eb4410441",
        "name": "INSERT_INTO_EXAMPLE",
        "func": "let json = msg.payload;\n\nvar score = json['d_score'];\n\nmsg.payload={}\n\n\nmsg.payload.tlf = json['d_score'].toString();\nmsg.payload.name = \"arne29\";\nmsg.payload.email = \"arn12@gmail.no\";\nmsg.payload.address = \"arnebakken\";\n\nmsg.topic=\"INSERT INTO users(`name`, `email`, `address`, `tlf`) VALUES(:name,:email,:address,:tlf);\"\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 280,
        "wires": [
            [
                "cbc77b34d7b89224"
            ]
        ]
    },
    {
        "id": "77ef07ddbc346c22",
        "type": "mysql",
        "z": "d974087eb4410441",
        "g": "8d23dc769da0d07f",
        "mydb": "f2952bbb2ad433e2",
        "name": "mdb-test",
        "x": 360,
        "y": 420,
        "wires": [
            [
                "a5837349ffd6fca1"
            ]
        ]
    },
    {
        "id": "22308172980d6de6",
        "type": "function",
        "z": "d974087eb4410441",
        "g": "8d23dc769da0d07f",
        "name": "getUsers",
        "func": "msg.topic = \"SELECT u.id, u.name, u.email, u.address, u.tlf, AVG(e.score) AS score FROM users u LEFT JOIN ecoscore e ON u.id = e.user_id;\"\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 420,
        "wires": [
            [
                "77ef07ddbc346c22"
            ]
        ]
    },
    {
        "id": "a5837349ffd6fca1",
        "type": "link out",
        "z": "d974087eb4410441",
        "g": "8d23dc769da0d07f",
        "name": "db.output.getusers",
        "mode": "link",
        "links": [
            "33998569dd15990e"
        ],
        "x": 475,
        "y": 420,
        "wires": []
    },
    {
        "id": "2bd950a05a93757a",
        "type": "link in",
        "z": "d974087eb4410441",
        "g": "8d23dc769da0d07f",
        "name": "db.input.getusers",
        "links": [
            "f088635e3f42d421"
        ],
        "x": 75,
        "y": 420,
        "wires": [
            [
                "22308172980d6de6"
            ]
        ]
    },
    {
        "id": "1236e3bf163b4142",
        "type": "link in",
        "z": "d974087eb4410441",
        "d": true,
        "g": "c9965334e0b36a0b",
        "name": "link in 5",
        "links": [
            "038b288f4ba869de"
        ],
        "x": 75,
        "y": 580,
        "wires": [
            [
                "6f161c9edf33ba3d"
            ]
        ]
    },
    {
        "id": "eb6d2cad886648e8",
        "type": "link in",
        "z": "d974087eb4410441",
        "d": true,
        "g": "c9965334e0b36a0b",
        "name": "link in 6",
        "links": [
            "2f4b2f43ca14af61"
        ],
        "x": 75,
        "y": 640,
        "wires": [
            [
                "fbb060fd70043410"
            ]
        ]
    },
    {
        "id": "e893b7685905402d",
        "type": "link in",
        "z": "d974087eb4410441",
        "d": true,
        "g": "c9965334e0b36a0b",
        "name": "link in 7",
        "links": [
            "b27aeb6f7cd37378"
        ],
        "x": 75,
        "y": 700,
        "wires": [
            [
                "8f11c965debd450e"
            ]
        ]
    },
    {
        "id": "6f161c9edf33ba3d",
        "type": "debug",
        "z": "d974087eb4410441",
        "d": true,
        "g": "c9965334e0b36a0b",
        "name": "distance",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 240,
        "y": 580,
        "wires": []
    },
    {
        "id": "fbb060fd70043410",
        "type": "debug",
        "z": "d974087eb4410441",
        "d": true,
        "g": "c9965334e0b36a0b",
        "name": "speed",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 230,
        "y": 640,
        "wires": []
    },
    {
        "id": "8f11c965debd450e",
        "type": "debug",
        "z": "d974087eb4410441",
        "d": true,
        "g": "c9965334e0b36a0b",
        "name": "score",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 230,
        "y": 700,
        "wires": []
    },
    {
        "id": "f1c8edc3f112fcf2",
        "type": "mysql",
        "z": "d974087eb4410441",
        "g": "7c5378ce3d8e1fab",
        "mydb": "f2952bbb2ad433e2",
        "name": "mdb-test",
        "x": 400,
        "y": 1080,
        "wires": [
            [
                "6578372151a0df87"
            ]
        ]
    },
    {
        "id": "06dc7761e9b36e06",
        "type": "function",
        "z": "d974087eb4410441",
        "g": "7c5378ce3d8e1fab",
        "name": "get_driving_score",
        "func": "let user_id = flow.get(\"user_id\");\nlet toll_id = flow.get(\"toll_id\");\n\n\nmsg.topic = `\nSELECT t.id, p.id, p.NOK_per_kWh FROM relations r \nLEFT JOIN powerprices p ON r.pcost_id = p.id\nLEFT JOIN tollstation t ON r.toll_id = t.id\nWHERE t.id = ${toll_id}\nORDER BY p.id DESC\nLIMIT 1;\n`;\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1080,
        "wires": [
            [
                "f1c8edc3f112fcf2"
            ]
        ]
    },
    {
        "id": "8a79294f8c9e1bda",
        "type": "link out",
        "z": "d974087eb4410441",
        "g": "7c5378ce3d8e1fab",
        "name": "db.toll-station.output",
        "mode": "link",
        "links": [
            "56faac02af1e3921"
        ],
        "x": 1105,
        "y": 1080,
        "wires": []
    },
    {
        "id": "b3c8efd25d693eb7",
        "type": "link in",
        "z": "d974087eb4410441",
        "g": "fa423b6c44026824",
        "name": "link in 9",
        "links": [
            "11e643123ec5b919"
        ],
        "x": 115,
        "y": 920,
        "wires": [
            [
                "2fa7fa16.df7d36",
                "6deff2c3917ab08e",
                "6c75f5e6b0bae9ef"
            ]
        ]
    },
    {
        "id": "2fa7fa16.df7d36",
        "type": "function",
        "z": "d974087eb4410441",
        "d": true,
        "g": "fa423b6c44026824",
        "name": "insert_toll",
        "func": "let car_id = msg.payload.car_id;\n\nflow.set(\"vehicle_id\", car_id);\n\nmsg.payload=[\"good day\", car_id];\nmsg.topic=\"INSERT INTO toll (`info`, `car_id`) VALUES (?, ?);\";\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 880,
        "wires": [
            [
                "8c41d7d6d675747c"
            ]
        ]
    },
    {
        "id": "8c41d7d6d675747c",
        "type": "mysql",
        "z": "d974087eb4410441",
        "g": "fa423b6c44026824",
        "mydb": "f2952bbb2ad433e2",
        "name": "mdb-test",
        "x": 450,
        "y": 920,
        "wires": [
            [
                "20fc10f82e1fbb3c",
                "bd2be327c3068176"
            ]
        ]
    },
    {
        "id": "6deff2c3917ab08e",
        "type": "function",
        "z": "d974087eb4410441",
        "g": "fa423b6c44026824",
        "name": "insert_price",
        "func": "let price = msg.payload.price;\n\nmsg.payload = [price];\nmsg.topic = \"INSERT INTO powerprices (`NOK_per_kWh`) VALUES (?);\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 920,
        "wires": [
            [
                "8c41d7d6d675747c"
            ]
        ]
    },
    {
        "id": "20fc10f82e1fbb3c",
        "type": "function",
        "z": "d974087eb4410441",
        "d": true,
        "g": "fa423b6c44026824",
        "name": "insert_coupling_table",
        "func": "let toll_id = null;\nlet price_id = null;\n\nif (/INSERT INTO toll/i.test(msg.topic)) {\n    flow.set(\"toll_id\", msg.payload.insertId);   \n}\n\nif (/INSERT INTO powerprices/i.test(msg.topic)) {\n    flow.set(\"price_id\", msg.payload.insertId);\n}\n\ntoll_id = flow.get(\"toll_id\");\nprice_id = flow.get(\"price_id\");\n\nif (toll_id && price_id) {\n    msg.payload = [toll_id, price_id];\n    msg.topic = msg.topic = \"INSERT INTO coupling (`tr_id`, `toll_id`, `pcost_id`) VALUES (NULL, ?, ?);\";\n\n    flow.set(\"toll_id\", null);\n    flow.set(\"price_id\", null);\n\n    return msg;\n} else {\n    return null;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 920,
        "wires": [
            [
                "465b90c9e7577fdd"
            ]
        ]
    },
    {
        "id": "f5f52c154dc1c527",
        "type": "debug",
        "z": "d974087eb4410441",
        "g": "fa423b6c44026824",
        "name": "debug 40",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 920,
        "wires": []
    },
    {
        "id": "465b90c9e7577fdd",
        "type": "mysql",
        "z": "d974087eb4410441",
        "g": "fa423b6c44026824",
        "mydb": "f2952bbb2ad433e2",
        "name": "mdb-test",
        "x": 870,
        "y": 920,
        "wires": [
            [
                "f5f52c154dc1c527",
                "b8b5793024a68019"
            ]
        ]
    },
    {
        "id": "b8b5793024a68019",
        "type": "link out",
        "z": "d974087eb4410441",
        "g": "fa423b6c44026824",
        "name": "db.output.completed_insert_prices",
        "mode": "link",
        "links": [
            "2492751851d4ab57"
        ],
        "x": 1005,
        "y": 960,
        "wires": []
    },
    {
        "id": "2492751851d4ab57",
        "type": "link in",
        "z": "d974087eb4410441",
        "g": "7c5378ce3d8e1fab",
        "name": "link in 10",
        "links": [
            "b8b5793024a68019"
        ],
        "x": 105,
        "y": 1080,
        "wires": [
            [
                "06dc7761e9b36e06"
            ]
        ]
    },
    {
        "id": "bd683dfaf575d92b",
        "type": "mysql",
        "z": "d974087eb4410441",
        "g": "7c5378ce3d8e1fab",
        "mydb": "f2952bbb2ad433e2",
        "name": "mdb-test",
        "x": 760,
        "y": 1080,
        "wires": [
            [
                "8ff91e6586ddbeb6"
            ]
        ]
    },
    {
        "id": "6578372151a0df87",
        "type": "function",
        "z": "d974087eb4410441",
        "g": "7c5378ce3d8e1fab",
        "name": "get_based_on_uid",
        "func": "let c_id;\nlet u_id;\n\n\nif (msg.topic == \"id\"){\n    flow.set(\"user_id\", msg.payload.u_id);\n    flow.set(\"car_id\", msg.payload.v_id);\n    return null;\n} else {\n    c_id = flow.get(\"car_id\");\n    u_id = flow.get(\"user_id\");    \n\n    let price = msg.payload[0]['NOK_per_kWh'];\n    flow.set(\"NOK_kWh\", price);\n    msg.payload = [u_id, c_id];\n\n    msg.topic = `\n    SELECT v.id, v.vehicle_type, AVG(e.score) AS score FROM vehicles v \n    LEFT JOIN users u ON v.owner_id = u.id\n    LEFT JOIN ecoscore e ON e.user_id = u.id\n    WHERE u.id = ? AND v.id = ?;\n    `;\n\n} \n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1080,
        "wires": [
            [
                "2311204e8aeb792a",
                "bd683dfaf575d92b"
            ]
        ]
    },
    {
        "id": "8ff91e6586ddbeb6",
        "type": "function",
        "z": "d974087eb4410441",
        "g": "7c5378ce3d8e1fab",
        "name": "sort_variables",
        "func": "let type = msg.payload[0]['vehicle_type'];\nlet eco_score = msg.payload[0]['score'];\nlet p = flow.get(\"NOK_kWh\");\n\n\nmsg.payload = [type, eco_score, p]\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 1080,
        "wires": [
            [
                "8a79294f8c9e1bda"
            ]
        ]
    },
    {
        "id": "f6d3906734b58c4b",
        "type": "function",
        "z": "d974087eb4410441",
        "g": "1060263491f37862",
        "name": "get_toll_prices",
        "func": "let station_id = null;\n\n\nif (msg.topic == \"request_from_toll_prices\") {\n    station_id = global.get(\"selected_toll_station\");\n} else {\n    station_id = flow.get(\"toll_id\");\n}\n\nmsg.payload=[station_id];\n\nmsg.topic = `SELECT id, location, electric_price, gasoline_price, service_price FROM tollstation t\nWHERE id = ?;`\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1260,
        "wires": [
            [
                "e8c5ccf60952c2be"
            ]
        ]
    },
    {
        "id": "2d95327a837381a2",
        "type": "debug",
        "z": "d974087eb4410441",
        "g": "1060263491f37862",
        "name": "debug 49",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 1260,
        "wires": []
    },
    {
        "id": "e8c5ccf60952c2be",
        "type": "mysql",
        "z": "d974087eb4410441",
        "g": "1060263491f37862",
        "mydb": "f2952bbb2ad433e2",
        "name": "mdb-test",
        "x": 580,
        "y": 1260,
        "wires": [
            [
                "a501c4b70711fc78"
            ]
        ]
    },
    {
        "id": "0f60eb9b92962992",
        "type": "link in",
        "z": "d974087eb4410441",
        "g": "1060263491f37862",
        "name": "db.input.get_toll_prices",
        "links": [
            "11e643123ec5b919"
        ],
        "x": 115,
        "y": 1260,
        "wires": [
            [
                "f6d3906734b58c4b"
            ]
        ]
    },
    {
        "id": "a501c4b70711fc78",
        "type": "function",
        "z": "d974087eb4410441",
        "g": "1060263491f37862",
        "name": "set_global",
        "func": "if (msg.payload.length === 0) {\n    msg.payload = \"No such station exist\";\n    msg.topic = \"id_error\";\n} else {\n    let toll_electric_price = msg.payload[0]['electric_price'];\n    let toll_gasoline_price = msg.payload[0]['gasoline_price'];\n    let toll_service_price = msg.payload[0]['service_price'];\n\n    global.set(\"toll_electric\", toll_electric_price);\n    global.set(\"toll_gasoline\", toll_gasoline_price);\n    global.set(\"toll_service\", toll_service_price);\n    \n    let station_info = {\n        id : msg.payload[0]['id'],\n        location: msg.payload[0]['location']\n    };\n\n    msg.payload = msg.payload[0]['location'];\n    \n    msg.topic = \"ok\";\n}\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1260,
        "wires": [
            [
                "2d95327a837381a2",
                "f82bd2713bd5bea4"
            ]
        ]
    },
    {
        "id": "e1c49e9771213b10",
        "type": "link in",
        "z": "d974087eb4410441",
        "g": "1060263491f37862",
        "name": "db.input.get_toll_prices",
        "links": [
            "d9f5b4ebe6ceadec"
        ],
        "x": 115,
        "y": 1320,
        "wires": [
            [
                "f6d3906734b58c4b"
            ]
        ]
    },
    {
        "id": "f82bd2713bd5bea4",
        "type": "link out",
        "z": "d974087eb4410441",
        "g": "1060263491f37862",
        "name": "db.prices.updated",
        "mode": "link",
        "links": [
            "b3df72d8dcb2bc3a"
        ],
        "x": 935,
        "y": 1320,
        "wires": []
    },
    {
        "id": "bd2be327c3068176",
        "type": "function",
        "z": "d974087eb4410441",
        "g": "fa423b6c44026824",
        "name": "insert_relations_table",
        "func": "let station_id = flow.get(\"toll_id\");\nlet price_id = null;\n\nif (/INSERT INTO powerprices/i.test(msg.topic)) {\n    flow.set(\"price_id\", msg.payload.insertId);\n}\n\nprice_id = flow.get(\"price_id\");\nmsg.payload = station_id;\nif (station_id && price_id) {\n    msg.payload = [station_id, price_id];\n    msg.topic = msg.topic = \"INSERT INTO relations (`tr_id`, `toll_id`, `pcost_id`) VALUES (NULL, ?, ?);\";\n\n    //flow.set(\"toll_id\", null);\n    flow.set(\"price_id\", null);\n\n    return msg;\n} else {\n    return null;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 960,
        "wires": [
            [
                "465b90c9e7577fdd"
            ]
        ]
    },
    {
        "id": "6c75f5e6b0bae9ef",
        "type": "function",
        "z": "d974087eb4410441",
        "g": "fa423b6c44026824",
        "name": "get_toll_id",
        "func": "let id = msg.payload.toll_id;\nflow.set(\"toll_id\", id);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 960,
        "wires": [
            [
                "bd2be327c3068176"
            ]
        ]
    },
    {
        "id": "70ea88b87505faaa",
        "type": "link in",
        "z": "d974087eb4410441",
        "g": "7c5378ce3d8e1fab",
        "name": "link in 11",
        "links": [
            "6583d5f44e957ce0"
        ],
        "x": 445,
        "y": 1140,
        "wires": [
            [
                "6578372151a0df87"
            ]
        ]
    },
    {
        "id": "2311204e8aeb792a",
        "type": "debug",
        "z": "d974087eb4410441",
        "g": "7c5378ce3d8e1fab",
        "name": "debug 54",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 1140,
        "wires": []
    },
    {
        "id": "ea5ff2cd0cdfe128",
        "type": "ui-template",
        "z": "9c23ead5f4cd17b6",
        "g": "1343424fbbdc4b4e",
        "group": "e6a3eaaef97c58a0",
        "page": "",
        "ui": "",
        "name": "display_users",
        "order": 3,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n    <v-text-field v-model=\"search\" label=\"Search\" prepend-inner-icon=\"mdi-magnify\" single-line variant=\"outlined\"\n    hide-details></v-text-field>\n    <v-data-table v-model:search=\"search\" :items=\"msg?.payload\">\n\n      <template v-slot:header.total_impact_score>\n        <div class=\"text-center\">Score</div>\n      </template>\n\n      <template v-slot:item.name=\"{ item }\">\n        {{ item.name }}°C\n      </template>\n\n      <template v-slot:item.score=\"{ item }\">\n        <v-progress-linear v-model=\"item.score\" min=\"0\" max=\"100\" height=\"25\" :color=\"getColor(item)\">\n          <template v-slot:default=\"{ value }\">\n            <strong>{{ item.score }}</strong>\n          </template>\n        </v-progress-linear>\n      </template>\n\n    </v-data-table>\n</template>\n\n<script>\n    export default {\n    data () {\n      return {\n        search: ''\n      }\n    },\n    methods: {\n      getColor: function (item) {\n        if (item.score < 70) {\n          return 'red'\n        } else {\n          return 'green'\n        }\n      }\n    }\n  }\n</script>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 580,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "dc1d7aadb5cf6f36",
        "type": "ui-template",
        "z": "9c23ead5f4cd17b6",
        "g": "0591b57e8f20d00d",
        "group": "",
        "page": "",
        "ui": "ed3a4854fa1b4db8",
        "name": "css_all_pages",
        "order": 0,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "\n\nbody {\n    font-family: monospace;\n}\n\n\n.v-main {\n    background-image: url(\"\thttps://www.transparenttextures.com/patterns/batthern.png\");\n    background-repeat: repeat;\n}\n\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "site:style",
        "className": "",
        "x": 160,
        "y": 60,
        "wires": [
            [
                "b23d2583cd712fdc"
            ]
        ]
    },
    {
        "id": "723dda3faa263f6c",
        "type": "function",
        "z": "9c23ead5f4cd17b6",
        "g": "1343424fbbdc4b4e",
        "name": "function 4",
        "func": "//if (msg.payload == \"Loaded\") {\n//    msg.payload = [{ \"room\": \"Living Room\", \"id\": \"1234\", \"target\": 18.1, \"current\": 20 }, { \"room\": \"Bathroom Room\", \"id\": \"5678\", \"target\": 19.5, \"current\": 18 }, { \"room\": \"Kitchen Room\", \"id\": \"9101\", \"target\": 18.1, \"current\": 17.6 }]\n//    msg.topic = \"input\"\n//} else {\n//    msg.payload = \"in home folder\"\n//    msg.topic = \"input\"\n//}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 920,
        "wires": [
            [
                "070400a13d344993",
                "ea5ff2cd0cdfe128"
            ]
        ]
    },
    {
        "id": "070400a13d344993",
        "type": "debug",
        "z": "9c23ead5f4cd17b6",
        "g": "1343424fbbdc4b4e",
        "name": "debug 24",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 920,
        "wires": []
    },
    {
        "id": "ec77049af9dae0ab",
        "type": "ui-control",
        "z": "9c23ead5f4cd17b6",
        "name": "",
        "ui": "ed3a4854fa1b4db8",
        "events": "all",
        "x": 340,
        "y": 1260,
        "wires": [
            [
                "1bf8e1c16c995ae6"
            ]
        ]
    },
    {
        "id": "1bf8e1c16c995ae6",
        "type": "debug",
        "z": "9c23ead5f4cd17b6",
        "name": "debug 27",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 1260,
        "wires": []
    },
    {
        "id": "c1964b765cb6e87e",
        "type": "inject",
        "z": "9c23ead5f4cd17b6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Contact",
        "payloadType": "str",
        "x": 130,
        "y": 1260,
        "wires": [
            [
                "ec77049af9dae0ab"
            ]
        ]
    },
    {
        "id": "a71d16685af96a6c",
        "type": "ui-button",
        "z": "9c23ead5f4cd17b6",
        "group": "78b509623ddc3923",
        "name": "button.contact",
        "label": "Contact button",
        "order": 0,
        "width": 0,
        "height": 0,
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "Contact",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 160,
        "y": 1320,
        "wires": [
            [
                "ec77049af9dae0ab"
            ]
        ]
    },
    {
        "id": "856de6d3ce3eff89",
        "type": "ui-template",
        "z": "9c23ead5f4cd17b6",
        "g": "1343424fbbdc4b4e",
        "group": "e6a3eaaef97c58a0",
        "page": "",
        "ui": "",
        "name": "users.pageload",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<script>\n    export default {\n    data () {\n\n    },\n    methods: {\n    },\n    mounted() {\n      this.loaded = true\n      this.send(\"Loaded\")\n    },\n    unmounted() {\n      this.loaded = false\n    }\n  }\n</script>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 160,
        "y": 840,
        "wires": [
            [
                "f088635e3f42d421"
            ]
        ]
    },
    {
        "id": "f088635e3f42d421",
        "type": "link out",
        "z": "9c23ead5f4cd17b6",
        "g": "1343424fbbdc4b4e",
        "name": "dashbaord.output.getusers",
        "mode": "link",
        "links": [
            "2bd950a05a93757a"
        ],
        "x": 315,
        "y": 840,
        "wires": []
    },
    {
        "id": "33998569dd15990e",
        "type": "link in",
        "z": "9c23ead5f4cd17b6",
        "g": "1343424fbbdc4b4e",
        "name": "dashboard.input.getusers",
        "links": [
            "a5837349ffd6fca1"
        ],
        "x": 95,
        "y": 920,
        "wires": [
            [
                "723dda3faa263f6c"
            ]
        ]
    },
    {
        "id": "29614505de526e3e",
        "type": "ui-template",
        "z": "9c23ead5f4cd17b6",
        "group": "d68e6862685d10df",
        "page": "",
        "ui": "",
        "name": "star_rating",
        "order": 4,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <div class=\"text-center\">\n    <v-rating\n      hover :length=\"5\" :size=\"32\"\n      v-model=\"value\"\n      active-color=\"primary\"\n      @update:model-value=\"send({payload: value})\"\n    ></v-rating>\n  </div>\n</template>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 130,
        "y": 1040,
        "wires": [
            [
                "7bb2d1e517ee8d24"
            ]
        ]
    },
    {
        "id": "7bb2d1e517ee8d24",
        "type": "debug",
        "z": "9c23ead5f4cd17b6",
        "name": "debugstar",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 370,
        "y": 1040,
        "wires": []
    },
    {
        "id": "728bcfee316180c5",
        "type": "ui-text-input",
        "z": "9c23ead5f4cd17b6",
        "g": "116ddb3989f7865c",
        "group": "f4b408f314ea8fb3",
        "name": "electric_car",
        "label": "Electric",
        "order": 4,
        "width": "1",
        "height": "1",
        "topic": "topic",
        "topicType": "msg",
        "mode": "number",
        "delay": 300,
        "passthru": true,
        "sendOnDelay": false,
        "sendOnBlur": true,
        "sendOnEnter": true,
        "className": "",
        "x": 670,
        "y": 580,
        "wires": [
            [
                "d3bb702bcdf691a1"
            ]
        ]
    },
    {
        "id": "9695c47a09c4d657",
        "type": "function",
        "z": "9c23ead5f4cd17b6",
        "g": "116ddb3989f7865c",
        "name": "prices",
        "func": "\n\nlet e_price = global.get(\"toll_electric\");\nlet s_price = global.get(\"toll_service\");\nlet g_price = global.get(\"toll_gasoline\");\n\n\nlet s = 5;\nlet g = 25;\n\n\nlet current_prices = {\n    electric: e_price,\n    service: s_price,\n    gasoline: g_price\n};\n\nmsg.payload = current_prices;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 620,
        "wires": [
            [
                "d5bb29401cd9c2f9"
            ]
        ]
    },
    {
        "id": "04613cd67e7bd8bd",
        "type": "ui-template",
        "z": "9c23ead5f4cd17b6",
        "g": "69f933624170a8db",
        "group": "f4b408f314ea8fb3",
        "page": "",
        "ui": "",
        "name": "overview.pageload",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "\n<script>\n    export default {\n    data () {\n    },\n    methods: {\n    },\n    mounted() {\n      this.loaded = true\n      this.send(\"Loaded\")\n    },\n    unmounted() {\n      this.loaded = false\n    }\n  }\n</script>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 190,
        "y": 300,
        "wires": [
            [
                "6f2b6412d3243be9",
                "da204c00005594c9"
            ]
        ]
    },
    {
        "id": "fd21801d95c179a1",
        "type": "ui-text-input",
        "z": "9c23ead5f4cd17b6",
        "g": "116ddb3989f7865c",
        "group": "f4b408f314ea8fb3",
        "name": "service_car",
        "label": "Service",
        "order": 5,
        "width": "1",
        "height": "1",
        "topic": "topic",
        "topicType": "msg",
        "mode": "number",
        "delay": 300,
        "passthru": true,
        "sendOnDelay": false,
        "sendOnBlur": true,
        "sendOnEnter": true,
        "className": "",
        "x": 670,
        "y": 620,
        "wires": [
            [
                "d3bb702bcdf691a1"
            ]
        ]
    },
    {
        "id": "6a8d7251a99d269b",
        "type": "ui-text-input",
        "z": "9c23ead5f4cd17b6",
        "g": "116ddb3989f7865c",
        "group": "f4b408f314ea8fb3",
        "name": "gasoline_car",
        "label": "Gasoline",
        "order": 6,
        "width": "1",
        "height": "1",
        "topic": "topic",
        "topicType": "msg",
        "mode": "number",
        "delay": 300,
        "passthru": true,
        "sendOnDelay": false,
        "sendOnBlur": true,
        "sendOnEnter": true,
        "className": "",
        "x": 670,
        "y": 660,
        "wires": [
            [
                "d3bb702bcdf691a1"
            ]
        ]
    },
    {
        "id": "49ab5c9eef18e2fe",
        "type": "debug",
        "z": "9c23ead5f4cd17b6",
        "g": "116ddb3989f7865c",
        "name": "debug 47",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 620,
        "wires": []
    },
    {
        "id": "d3bb702bcdf691a1",
        "type": "function",
        "z": "9c23ead5f4cd17b6",
        "g": "116ddb3989f7865c",
        "name": "update_service",
        "func": "if (msg.parts.key == \"electric\"){\n    //global.set(\"toll_electric\", msg.payload);\n    msg.payload = msg.payload;\n}\n\n\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 620,
        "wires": [
            [
                "49ab5c9eef18e2fe"
            ]
        ]
    },
    {
        "id": "2636e9073bae688d",
        "type": "switch",
        "z": "9c23ead5f4cd17b6",
        "g": "116ddb3989f7865c",
        "name": "",
        "property": "parts.key",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "electric",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "service",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "gasoline",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 490,
        "y": 620,
        "wires": [
            [
                "728bcfee316180c5"
            ],
            [
                "fd21801d95c179a1"
            ],
            [
                "6a8d7251a99d269b"
            ]
        ]
    },
    {
        "id": "d5bb29401cd9c2f9",
        "type": "split",
        "z": "9c23ead5f4cd17b6",
        "g": "116ddb3989f7865c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 370,
        "y": 620,
        "wires": [
            [
                "2636e9073bae688d"
            ]
        ]
    },
    {
        "id": "d2c115aaae325b40",
        "type": "comment",
        "z": "9c23ead5f4cd17b6",
        "g": "116ddb3989f7865c",
        "name": "make db-implementation",
        "info": "",
        "x": 950,
        "y": 700,
        "wires": []
    },
    {
        "id": "b23d2583cd712fdc",
        "type": "debug",
        "z": "9c23ead5f4cd17b6",
        "g": "0591b57e8f20d00d",
        "name": "debug 48",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 60,
        "wires": []
    },
    {
        "id": "d9f5b4ebe6ceadec",
        "type": "link out",
        "z": "9c23ead5f4cd17b6",
        "g": "69f933624170a8db",
        "name": "dashboard.output.refresh_true",
        "mode": "link",
        "links": [
            "e1c49e9771213b10"
        ],
        "x": 765,
        "y": 360,
        "wires": []
    },
    {
        "id": "ddefcb191dc9d43a",
        "type": "link in",
        "z": "9c23ead5f4cd17b6",
        "g": "116ddb3989f7865c",
        "name": "dashboard.input.update_prices",
        "links": [
            "438180f8e7ed266d",
            "7d834a69f9cfe8eb"
        ],
        "x": 115,
        "y": 620,
        "wires": [
            [
                "9695c47a09c4d657"
            ]
        ]
    },
    {
        "id": "6f2b6412d3243be9",
        "type": "function",
        "z": "9c23ead5f4cd17b6",
        "g": "69f933624170a8db",
        "name": "decide_if_refresh",
        "func": "let action = false;\n\nif (!global.get(\"toll_electric\") || !global.get(\"toll_gasoline\") || !global.get(\"toll_service\")) {\n    action = true;\n}\n\nmsg.payload = action;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 420,
        "wires": [
            [
                "32bba6d6bdb66cee"
            ]
        ]
    },
    {
        "id": "32bba6d6bdb66cee",
        "type": "switch",
        "z": "9c23ead5f4cd17b6",
        "g": "69f933624170a8db",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 630,
        "y": 420,
        "wires": [
            [
                "d9f5b4ebe6ceadec"
            ],
            [
                "7d834a69f9cfe8eb"
            ]
        ]
    },
    {
        "id": "7d834a69f9cfe8eb",
        "type": "link out",
        "z": "9c23ead5f4cd17b6",
        "g": "69f933624170a8db",
        "name": "dashboard.output.refresh_false",
        "mode": "link",
        "links": [
            "ddefcb191dc9d43a"
        ],
        "x": 765,
        "y": 440,
        "wires": []
    },
    {
        "id": "da204c00005594c9",
        "type": "function",
        "z": "9c23ead5f4cd17b6",
        "g": "69f933624170a8db",
        "name": "function 5",
        "func": "let a = global.get(\"toll_electric\");\n\nmsg.payload = a;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 460,
        "wires": [
            [
                "38573d34b841eb61"
            ]
        ]
    },
    {
        "id": "38573d34b841eb61",
        "type": "debug",
        "z": "9c23ead5f4cd17b6",
        "g": "69f933624170a8db",
        "name": "debug 51",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 460,
        "wires": []
    },
    {
        "id": "9ae509c0229a4605",
        "type": "ui-text",
        "z": "9c23ead5f4cd17b6",
        "g": "69f933624170a8db",
        "group": "f4b408f314ea8fb3",
        "order": 2,
        "width": "2",
        "height": "1",
        "name": "",
        "label": "Selected station",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": true,
        "font": "Helvetica, sans-serif",
        "fontSize": 16,
        "color": "#1c1c1c",
        "className": "",
        "x": 780,
        "y": 260,
        "wires": []
    },
    {
        "id": "9dca2e760e12e3df",
        "type": "ui-text-input",
        "z": "9c23ead5f4cd17b6",
        "g": "69f933624170a8db",
        "group": "f4b408f314ea8fb3",
        "name": "input_station",
        "label": "station_id",
        "order": 3,
        "width": "1",
        "height": "1",
        "topic": "topic",
        "topicType": "msg",
        "mode": "number",
        "delay": 300,
        "passthru": true,
        "sendOnDelay": false,
        "sendOnBlur": true,
        "sendOnEnter": true,
        "className": "",
        "x": 770,
        "y": 300,
        "wires": [
            [
                "ef9316e3662e77af"
            ]
        ]
    },
    {
        "id": "ef9316e3662e77af",
        "type": "function",
        "z": "9c23ead5f4cd17b6",
        "g": "69f933624170a8db",
        "name": "clamp",
        "func": "if (msg.payload <= 1) {\n    msg.payload = 1;\n}\n\n\n\n\nglobal.set(\"selected_toll_station\", msg.payload);\n\nmsg.topic = \"request_from_toll_prices\"\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 300,
        "wires": [
            [
                "d9f5b4ebe6ceadec"
            ]
        ]
    },
    {
        "id": "b3df72d8dcb2bc3a",
        "type": "link in",
        "z": "9c23ead5f4cd17b6",
        "g": "69f933624170a8db",
        "name": "link in 12",
        "links": [
            "f82bd2713bd5bea4"
        ],
        "x": 495,
        "y": 380,
        "wires": [
            [
                "2d68d6a1aa9ef244"
            ]
        ]
    },
    {
        "id": "2d68d6a1aa9ef244",
        "type": "switch",
        "z": "9c23ead5f4cd17b6",
        "g": "69f933624170a8db",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "id_error",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ok",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 630,
        "y": 380,
        "wires": [
            [
                "9ae509c0229a4605"
            ],
            [
                "2848dc9c2586b927",
                "438180f8e7ed266d",
                "9ae509c0229a4605"
            ]
        ]
    },
    {
        "id": "2848dc9c2586b927",
        "type": "debug",
        "z": "9c23ead5f4cd17b6",
        "g": "69f933624170a8db",
        "name": "debug 55",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 320,
        "wires": []
    },
    {
        "id": "438180f8e7ed266d",
        "type": "link out",
        "z": "9c23ead5f4cd17b6",
        "g": "69f933624170a8db",
        "name": "communication.output.refresh_after_change",
        "mode": "link",
        "links": [
            "ddefcb191dc9d43a"
        ],
        "x": 765,
        "y": 400,
        "wires": []
    }
]